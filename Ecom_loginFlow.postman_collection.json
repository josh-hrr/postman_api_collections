{
	"info": {
		"_postman_id": "92c8749d-95a6-4587-b834-01227b414b8c",
		"name": "Ecom_loginFlow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11217675",
		"_collection_link": "https://orange-desert-759474.postman.co/workspace/E2E-flows~c67b1876-234f-43b0-a785-4ac758016c88/collection/11217675-92c8749d-95a6-4587-b834-01227b414b8c?action=share&source=collection_link&creator=11217675"
	},
	"item": [
		{
			"name": "registerUserAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const myJson = pm.response.json();\r",
							"\r",
							"pm.test(\"it should return a successful response\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"it should have correct json payload key/values\", () => {\r",
							"    pm.expect(myJson).to.have.property(\"responseCode\", 201);\r",
							"    pm.expect(myJson).to.have.property(\"message\", \"User created!\");\r",
							"}) \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{accountName}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{accountEmail}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{accountPass}}",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Mr",
							"type": "text"
						},
						{
							"key": "birth_date",
							"value": "9",
							"type": "text"
						},
						{
							"key": "birth_month",
							"value": "12",
							"type": "text"
						},
						{
							"key": "birth_year",
							"value": "1996",
							"type": "text"
						},
						{
							"key": "firstname",
							"value": "JosueFromPostman",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "myLastName",
							"type": "text"
						},
						{
							"key": "company",
							"value": "myCompany",
							"type": "text"
						},
						{
							"key": "address1",
							"value": "testing address1 field",
							"type": "text"
						},
						{
							"key": "address2",
							"value": "testing address2 field",
							"type": "text"
						},
						{
							"key": "country",
							"value": "United States",
							"type": "text"
						},
						{
							"key": "state",
							"value": "testingState",
							"type": "text"
						},
						{
							"key": "city",
							"value": "testingCity",
							"type": "text"
						},
						{
							"key": "mobile_number",
							"value": "testingMobile",
							"type": "text"
						},
						{
							"key": "zipcode",
							"value": "055010",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://automationexercise.com/api/createAccount",
					"protocol": "https",
					"host": [
						"automationexercise",
						"com"
					],
					"path": [
						"api",
						"createAccount"
					],
					"query": [
						{
							"key": "name",
							"value": "test",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const myJson = pm.response.json();\r",
							"\r",
							"pm.test(\"it should return a successful response\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"it should have correct json payload key/values\", () => {\r",
							"    pm.expect(myJson.user).to.have.property(\"name\", pm.environment.get(\"accountName\"));\r",
							"    pm.expect(myJson.user).to.have.property(\"email\", pm.environment.get(\"accountEmail\")); \r",
							"})\r",
							"\r",
							"pm.test(\"it should NOT return password in json payload key/value\", () => {\r",
							"    pm.expect(myJson).to.not.have.property(\"password\", pm.environment.get(\"accountPass\"));\r",
							"    pm.expect(myJson.user).to.not.have.property(\"password\", pm.environment.get(\"accountPass\"));\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://automationexercise.com/api/getUserDetailByEmail?email={{accountEmail}}",
					"protocol": "https",
					"host": [
						"automationexercise",
						"com"
					],
					"path": [
						"api",
						"getUserDetailByEmail"
					],
					"query": [
						{
							"key": "email",
							"value": "{{accountEmail}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteUserAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const myJson = pm.response.json();\r",
							"\r",
							"pm.test(\"it should return a successfull response\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"it should have correct json payload key/values\", () => {\r",
							"    pm.expect(myJson).to.have.property(\"responseCode\", 200);\r",
							"    pm.expect(myJson).to.have.property(\"message\", \"Account deleted!\");\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "{{accountEmail}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{accountPass}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://automationexercise.com/api/deleteAccount",
					"protocol": "https",
					"host": [
						"automationexercise",
						"com"
					],
					"path": [
						"api",
						"deleteAccount"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}